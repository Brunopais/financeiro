{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BRUNO\\\\Desktop\\\\menu\\\\meu-projeto\\\\src\\\\pages\\\\ListaDeTarefas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListaDeTarefas = () => {\n  _s();\n  const [tarefas, setTarefas] = useState([{\n    id: 1,\n    texto: 'Estudar TypeScript',\n    concluida: false\n  }, {\n    id: 2,\n    texto: 'Desenvolver aplicação React',\n    concluida: false\n  }, {\n    id: 3,\n    texto: 'Revisar código',\n    concluida: false\n  }]);\n  const toggleConcluida = id => {\n    setTarefas(tarefas.map(tarefa => tarefa.id === id ? {\n      ...tarefa,\n      concluida: !tarefa.concluida\n    } : tarefa));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tarefas.map(tarefa => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => toggleConcluida(tarefa.id),\n        style: {\n          textDecoration: tarefa.concluida ? 'line-through' : 'none',\n          cursor: 'pointer'\n        },\n        children: tarefa.texto\n      }, tarefa.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ListaDeTarefas, \"AHwytoVbGya1sZQgFDgcVFDZWuY=\");\n_c = ListaDeTarefas;\nexport default ListaDeTarefas;\nvar _c;\n$RefreshReg$(_c, \"ListaDeTarefas\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ListaDeTarefas","_s","tarefas","setTarefas","id","texto","concluida","toggleConcluida","map","tarefa","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","textDecoration","cursor","_c","$RefreshReg$"],"sources":["C:/Users/BRUNO/Desktop/menu/meu-projeto/src/pages/ListaDeTarefas.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ntype Tarefa = {\r\n    id: number;\r\n    texto: string;\r\n    concluida: boolean;\r\n};\r\n\r\nconst ListaDeTarefas: React.FC = () => {\r\n    const [tarefas, setTarefas] = useState<Tarefa[]>([\r\n        { id: 1, texto: 'Estudar TypeScript', concluida: false },\r\n        { id: 2, texto: 'Desenvolver aplicação React', concluida: false },\r\n        { id: 3, texto: 'Revisar código', concluida: false },\r\n    ]);\r\n\r\n    const toggleConcluida = (id: number) => {\r\n        setTarefas(\r\n            tarefas.map(tarefa =>\r\n                tarefa.id === id ? { ...tarefa, concluida: !tarefa.concluida } : tarefa\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lista de Tarefas</h1>\r\n            <ul>\r\n                {tarefas.map(tarefa => (\r\n                    <li\r\n                        key={tarefa.id}\r\n                        onClick={() => toggleConcluida(tarefa.id)}\r\n                        style={{\r\n                            textDecoration: tarefa.concluida ? 'line-through' : 'none',\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    >\r\n                        {tarefa.texto}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListaDeTarefas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQxC,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAW,CAC7C;IAAEO,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,oBAAoB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACxD;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,6BAA6B;IAAEC,SAAS,EAAE;EAAM,CAAC,EACjE;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,gBAAgB;IAAEC,SAAS,EAAE;EAAM,CAAC,CACvD,CAAC;EAEF,MAAMC,eAAe,GAAIH,EAAU,IAAK;IACpCD,UAAU,CACND,OAAO,CAACM,GAAG,CAACC,MAAM,IACdA,MAAM,CAACL,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGK,MAAM;MAAEH,SAAS,EAAE,CAACG,MAAM,CAACH;IAAU,CAAC,GAAGG,MACrE,CACJ,CAAC;EACL,CAAC;EAED,oBACIV,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBf,OAAA;MAAAW,QAAA,EACKR,OAAO,CAACM,GAAG,CAACC,MAAM,iBACfV,OAAA;QAEIgB,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAACE,MAAM,CAACL,EAAE,CAAE;QAC1CY,KAAK,EAAE;UACHC,cAAc,EAAER,MAAM,CAACH,SAAS,GAAG,cAAc,GAAG,MAAM;UAC1DY,MAAM,EAAE;QACZ,CAAE;QAAAR,QAAA,EAEDD,MAAM,CAACJ;MAAK,GAPRI,MAAM,CAACL,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CAlCID,cAAwB;AAAAmB,EAAA,GAAxBnB,cAAwB;AAoC9B,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}