{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BRUNO\\\\Desktop\\\\programas\\\\projeto-final\\\\financeiro\\\\src\\\\pages\\\\CotacoesAtuais.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CotacoesAtuais = () => {\n  _s();\n  const [acoes, setAcoes] = useState([]);\n  const [criptos, setCriptos] = useState([]);\n  const alphaVantageApiKey = 'ZYBAK1PW3JP7D7B0'; // Substitua pela sua chave API do Alpha Vantage\n\n  // Símbolos das 5 ações mais populares\n  const symbols = ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA'];\n\n  // IDs das 5 criptomoedas mais populares\n  const cryptoIds = ['bitcoin', 'ethereum', 'binancecoin', 'ripple', 'dogecoin'];\n  useEffect(() => {\n    // Função para buscar cotações de ações\n    const fetchAcoes = async () => {\n      try {\n        const promises = symbols.map(symbol => axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=5min&apikey=${alphaVantageApiKey}`));\n        const results = await Promise.all(promises);\n        const acoesData = results.map(result => {\n          const timeSeries = result.data['Time Series (5min)'];\n          if (timeSeries) {\n            // Verifique se timeSeries não é undefined ou null\n            const latestTimestamp = Object.keys(timeSeries)[0];\n            return {\n              symbol: result.data['Meta Data']['2. Symbol'],\n              price: timeSeries[latestTimestamp]['1. open']\n            };\n          } else {\n            console.error('Dados não encontrados para a ação:', result.data['Meta Data']['2. Symbol']);\n            return {\n              symbol: result.data['Meta Data']['2. Symbol'],\n              price: 'Dados indisponíveis'\n            };\n          }\n        });\n        setAcoes(acoesData);\n      } catch (error) {\n        console.error('Erro ao buscar cotações de ações:', error);\n      }\n    };\n\n    // Função para buscar cotações de criptomoedas\n    const fetchCriptos = async () => {\n      try {\n        const result = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${cryptoIds.join(',')}&vs_currencies=usd`);\n        if (result.data) {\n          const criptosData = Object.keys(result.data).map(id => ({\n            name: id.charAt(0).toUpperCase() + id.slice(1),\n            price: result.data[id].usd\n          }));\n          setCriptos(criptosData);\n        } else {\n          console.error('Dados não encontrados para criptomoedas');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar cotações de criptomoedas:', error);\n      }\n    };\n    fetchAcoes();\n    fetchCriptos();\n\n    // Atualiza as cotações a cada 5 minutos\n    const interval = setInterval(() => {\n      fetchAcoes();\n      fetchCriptos();\n    }, 300000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cota\\xE7\\xF5es Atuais\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"A\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: acoes.map((acao, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [acao.symbol, \": \", acao.price !== 'Dados indisponíveis' ? `$${acao.price}` : acao.price]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Criptomoedas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: criptos.map((cripto, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [cripto.name, \": $\", cripto.price]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(CotacoesAtuais, \"M1K09xWlu4vpwQF4mmNkY5ur3jI=\");\n_c = CotacoesAtuais;\nexport default CotacoesAtuais;\nvar _c;\n$RefreshReg$(_c, \"CotacoesAtuais\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CotacoesAtuais","_s","acoes","setAcoes","criptos","setCriptos","alphaVantageApiKey","symbols","cryptoIds","fetchAcoes","promises","map","symbol","get","results","Promise","all","acoesData","result","timeSeries","data","latestTimestamp","Object","keys","price","console","error","fetchCriptos","join","criptosData","id","name","charAt","toUpperCase","slice","usd","interval","setInterval","clearInterval","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","acao","index","cripto","_c","$RefreshReg$"],"sources":["C:/Users/BRUNO/Desktop/programas/projeto-final/financeiro/src/pages/CotacoesAtuais.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CotacoesAtuais: React.FC = () => {\r\n    const [acoes, setAcoes] = useState<any[]>([]);\r\n    const [criptos, setCriptos] = useState<any[]>([]);\r\n\r\n    const alphaVantageApiKey = 'ZYBAK1PW3JP7D7B0'; // Substitua pela sua chave API do Alpha Vantage\r\n\r\n    // Símbolos das 5 ações mais populares\r\n    const symbols = ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA'];\r\n\r\n    // IDs das 5 criptomoedas mais populares\r\n    const cryptoIds = ['bitcoin', 'ethereum', 'binancecoin', 'ripple', 'dogecoin'];\r\n\r\n    useEffect(() => {\r\n        // Função para buscar cotações de ações\r\n        const fetchAcoes = async () => {\r\n            try {\r\n                const promises = symbols.map(symbol =>\r\n                    axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=5min&apikey=${alphaVantageApiKey}`)\r\n                );\r\n                const results = await Promise.all(promises);\r\n                const acoesData = results.map(result => {\r\n                    const timeSeries = result.data['Time Series (5min)'];\r\n                    if (timeSeries) { // Verifique se timeSeries não é undefined ou null\r\n                        const latestTimestamp = Object.keys(timeSeries)[0];\r\n                        return {\r\n                            symbol: result.data['Meta Data']['2. Symbol'],\r\n                            price: timeSeries[latestTimestamp]['1. open']\r\n                        };\r\n                    } else {\r\n                        console.error('Dados não encontrados para a ação:', result.data['Meta Data']['2. Symbol']);\r\n                        return {\r\n                            symbol: result.data['Meta Data']['2. Symbol'],\r\n                            price: 'Dados indisponíveis'\r\n                        };\r\n                    }\r\n                });\r\n                setAcoes(acoesData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar cotações de ações:', error);\r\n            }\r\n        };\r\n\r\n        // Função para buscar cotações de criptomoedas\r\n        const fetchCriptos = async () => {\r\n            try {\r\n                const result = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${cryptoIds.join(',')}&vs_currencies=usd`);\r\n                if (result.data) {\r\n                    const criptosData = Object.keys(result.data).map(id => ({\r\n                        name: id.charAt(0).toUpperCase() + id.slice(1),\r\n                        price: result.data[id].usd\r\n                    }));\r\n                    setCriptos(criptosData);\r\n                } else {\r\n                    console.error('Dados não encontrados para criptomoedas');\r\n                }\r\n            } catch (error) {\r\n                console.error('Erro ao buscar cotações de criptomoedas:', error);\r\n            }\r\n        };\r\n\r\n        fetchAcoes();\r\n        fetchCriptos();\r\n\r\n        // Atualiza as cotações a cada 5 minutos\r\n        const interval = setInterval(() => {\r\n            fetchAcoes();\r\n            fetchCriptos();\r\n        }, 300000);\r\n\r\n        return () => clearInterval(interval);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ padding: '20px', textAlign: 'center' }}>\r\n            <h1>Cotações Atuais</h1>\r\n            <div style={{ marginTop: '20px' }}>\r\n                <h2>Ações</h2>\r\n                <ul>\r\n                    {acoes.map((acao, index) => (\r\n                        <li key={index}>\r\n                            {acao.symbol}: {acao.price !== 'Dados indisponíveis' ? `$${acao.price}` : acao.price}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div style={{ marginTop: '20px' }}>\r\n                <h2>Criptomoedas</h2>\r\n                <ul>\r\n                    {criptos.map((cripto, index) => (\r\n                        <li key={index}>\r\n                            {cripto.name}: ${cripto.price}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CotacoesAtuais;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}